/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nl.saxion.nena.opentcs.commadapter.ros2.control_center.gui_components;

import nl.saxion.nena.opentcs.commadapter.ros2.control_center.lib.InputValidationLib;

import java.util.ResourceBundle;

import static javax.swing.JOptionPane.showMessageDialog;
import static nl.saxion.nena.opentcs.commadapter.ros2.common.I18nLoopbackCommAdapter.BUNDLE_PATH;

/**
 * @author nielstiben
 */
public final class NewGoalInputPanel extends TextInputPanel {
    private static final ResourceBundle bundle = ResourceBundle.getBundle(BUNDLE_PATH);

    /**
     * Creates new form NewGoalPanel
     */
    public NewGoalInputPanel(String title) {
        super(title);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        xTextField = new javax.swing.JTextField();
        yTextField = new javax.swing.JTextField();
        xLabel = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();

        xLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        xLabel.setText("x");

        yLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yLabel.setText("y");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(xTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                        .addComponent(xLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(yLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                        .addComponent(yTextField))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(xLabel)
                                        .addComponent(yLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(xTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(yTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void enableInputValidation() {
        String format = InputValidationLib.getIsDoubleRegex();
        TextInputValidator validator = new TextInputPanel.TextInputValidator(format);
        xTextField.getDocument().addDocumentListener(validator);
        yTextField.getDocument().addDocumentListener(validator);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel xLabel;
    private javax.swing.JTextField xTextField;
    private javax.swing.JLabel yLabel;
    private javax.swing.JTextField yTextField;

    @Override
    protected void captureInput() {
        String xCoordinateString = xTextField.getText();
        String yCoordinateString = yTextField.getText();
        if(!InputValidationLib.isValidCoordinate(xCoordinateString,yCoordinateString)){
            // Invalid
            showMessageDialog(this, bundle.getString("ros2CommAdapterPanel.invalidCoordinatesDialog.text"));
        }

        double xCoordinate = Double.parseDouble(xCoordinateString);
        double yCoordinate = Double.parseDouble(yCoordinateString);
        input = new double[]{xCoordinate, yCoordinate};
    }
    // End of variables declaration//GEN-END:variables

    public static class Builder<E> implements InputPanel.Builder {
        /**
         * The panel's title.
         */
        private final String title;

        public Builder(String title) {
            this.title = title;
        }


        @Override
        public InputPanel build() {
            NewGoalInputPanel panel = new NewGoalInputPanel(title);
            panel.enableInputValidation();
            return panel;
        }
    }
}
